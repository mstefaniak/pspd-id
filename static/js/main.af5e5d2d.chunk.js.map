{"version":3,"sources":["images/logo.png","sign-in.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SignIn","useState","email","setEmail","pass","setPass","className","src","logo","alt","onSubmit","event","preventDefault","type","name","value","htmlFor","onChange","target","id","autoComplete","required","placeholder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAAe,MAA0B,iC,OCGnCA,EAAS,WAAO,IAAD,EACOC,qBADP,mBACZC,EADY,KACLC,EADK,OAEKF,qBAFL,mBAEZG,EAFY,KAENC,EAFM,KAkBnB,OACE,qBAAKC,UAAU,qFAAf,SACE,sBAAKA,UAAU,4BAAf,UACE,gCACE,qBAAKC,IAAKC,EAAMC,IAAI,OAAOH,UAAU,kBACrC,oBAAIA,UAAU,oDAAd,4BAIF,uBAAMA,UAAU,iBAAiBI,SAflB,SAACC,GACpBA,EAAMC,kBAcF,UACE,uBAAOC,KAAK,SAASC,KAAK,WAAWC,MAAM,SAC3C,sBAAKT,UAAU,mCAAf,UACE,gCACE,uBAAOU,QAAQ,gBAAgBV,UAAU,UAAzC,mBACA,uBAAOS,MAAOb,EAAOe,SA5BP,SAACN,GACzBR,EAASQ,EAAMO,OAAOH,QA2BsCI,GAAG,gBAAgBL,KAAK,QAAQD,KAAK,QAAQO,aAAa,QAAQC,UAAQ,EAACf,UAAU,6NAA6NgB,YAAY,aAElX,gCACE,uBAAON,QAAQ,WAAWV,UAAU,UAApC,wBACA,uBAAOS,MAAOX,EAAMa,SA5BP,SAACN,GACxBN,EAAQM,EAAMO,OAAOH,QA2BqCI,GAAG,WAAWL,KAAK,WAAWD,KAAK,WAAWO,aAAa,mBAAmBC,UAAQ,EAACf,UAAU,6NAA6NgB,YAAY,qBAI9X,8BACE,wBAAQT,KAAK,SAASP,UAAU,sOAAhC,gCCzCNiB,EAAM,WACV,OACE,cAAC,EAAD,KCSWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.af5e5d2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.860f766d.png\";","import { SyntheticEvent, ChangeEvent, useState } from 'react'\nimport logo from './images/logo.png';\n\nconst SignIn = () => {\n  const [email, setEmail] = useState<string>()\n  const [pass, setPass] = useState<string>()\n\n  const handleEmailChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value)\n  }\n\n  const handlePassChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setPass(event.target.value)\n  }\n\n  const handleSubmit = (event: SyntheticEvent) => {\n    event.preventDefault()\n\n    // TODO\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-start justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <img src={logo} alt=\"logo\" className=\"-mb-20 -mt-10\" />\n          <h2 className=\"text-center text-2xl font-extrabold text-gray-900\">\n            LEGITYMACJA\n          </h2>\n        </div>\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <input type=\"hidden\" name=\"remember\" value=\"true\" />\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"email-address\" className=\"sr-only\">Email</label>\n              <input value={email} onChange={handleEmailChange} id=\"email-address\" name=\"email\" type=\"email\" autoComplete=\"email\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Email\" />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">Hasło</label>\n              <input value={pass} onChange={handlePassChange} id=\"password\" name=\"password\" type=\"password\" autoComplete=\"current-password\" required className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\" placeholder=\"Hasło\" />\n            </div>\n          </div>\n\n          <div>\n            <button type=\"submit\" className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500\">\n              Zaloguj\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport { SignIn }\n","import './App.css';\nimport { SignIn } from './sign-in'\n\nconst App = () => {\n  return (\n    <SignIn />\n  );\n}\n\nexport { App }\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}